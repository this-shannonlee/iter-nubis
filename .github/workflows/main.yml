name: Deploy to GitHub Pages
env:
  PUBLISH_DIR: src/bin/Release/net9.0/publish/wwwroot
# Run workflow on every push to the main branch
on:
  push:
    branches: main
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  deploy-to-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
      # uses GitHub's checkout action to checkout code from the main branch
      - uses: actions/checkout@v5.0.0

      # sets up .NET Core SDK
      - name: Get latest .NET SDK
        uses: actions/setup-dotnet@v3.4.2
        with:
          dotnet-version: '9.0'

      # publishes Blazor project to the release folder
      - name: Publish .NET Project
        run: dotnet publish src/IterNubis.csproj -c Release

      # changes the base-tag in index.html from '/' to 'BlazorGitHubPagesDemo' to match GitHub Pages repository subdirectory
      - name: Change base-tag in index.html from / to iter-nubis
        run: sed -i 's/<base href="\/" \/>/<base href="\/iter-nubis\/" \/>/g' release/wwwroot/index.html

      # copy index.html to 404.html to serve the same file when a file is not found
      - name: copy index.html to 404.html
        run: cp release/wwwroot/index.html release/wwwroot/404.html

      # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
        
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5.0.0
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4.0.0
        with:
          path: ${{ env.PUBLISH_DIR }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5

        
      # # publishes wwwroot directory to GitHub Pages
      # - name: Commit wwwroot to GitHub Pages
      #   uses: JamesIves/github-pages-deploy-action@4.1.5
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: gh-pages # The branch the action should deploy to.
      #     folder: release/wwwroot # The folder the action should deploy.
